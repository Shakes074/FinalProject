@page "/member"

<h3>Member</h3>

<Button Type="primary" OnClick="@OnAddMember">
    Add Member
</Button>

<br />

<Table @ref="table"
       TItem="Models.ViewMember"
       DataSource="@MemberList"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       @bind-SelectedRows="selectedRows"
       OnChange="OnChange"
       Size="TableSize.Small"
       RowKey="x=>x.ID">

    <PropertyColumn Title="First Name" Property="c=>c.FirstName" />
    <PropertyColumn Title="Last Name" Property="c=>c.LastName" Sortable />
    
        <PropertyColumn Title="Marital Status" Property="c=>c.MaritalStatus" />
    
    <PropertyColumn Title="Date of Birth" Property="c=>c.DateOfBirth" />
    <PropertyColumn Title="Gender" Property="c=>c.Gender" Sortable/>
    <PropertyColumn Title="Email" Property="c=>c.Email" />
    
    <PropertyColumn Title="Contact Number" Property="c=>c.Phone" />
    <PropertyColumn Title="Joining Date" Property="c=>c.JoinDate" />
    <PropertyColumn Title="Branch Name" Property="c=>c.BranchName" />
    <PropertyColumn Title="Status" Property="c=>c.StatusName" Sortable/>
    <PropertyColumn Title="Role" Property="c=>c.RoleName" />

        <ActionColumn Title="Action">

        <Button OnClick="()=>OnUpdate(context, context.ID)">Update</Button>

            <Popconfirm Title="Sure to delete?"
                    OnConfirm="()=> deleteRow(context.ID)"
                    OkText="Yes"
                    CancelText="No">
        
            <Button Type="primary" OnClick="()=> deleteRow(context.ID)">
                <a>Delete</a>
            </Button>
                   
        </Popconfirm>
    </ActionColumn>
    

</Table>

<br />

@using AntDesign;
@using AntDesign.TableModels;
@using System.Text.Json;
@using System.ComponentModel;
@using System.Security.Cryptography
@using System.Text
@using UI.Components.Pages.Modals
@using Models;
@using UI.Service

@inject ModalService ModalService;

@code {

    List<Models.ViewMember> MemberList;

    IEnumerable<Models.ViewMember> selectedRows;
    ITable table;

    int _pageIndex = 1;
    int _pageSize = 10;
    int _total = 0;

    protected override async Task OnInitializedAsync()
    {
        MemberList = await MemberService.ViewMembers();
        _total = MemberList.Count;
    }


    public async Task OnChange(QueryModel<Models.ViewMember> queryModel)
    {
        Console.WriteLine(JsonSerializer.Serialize(queryModel));
    }

    // Open Update Modal and Populate with with Data
    private async Task OnUpdate(Models.ViewMember context, int Id)
    {
        var member = new InsertMember
            {
                ID = Id,
                FirstName = context.FirstName,
                LastName = context.LastName,
                MaritalStatus = context.MaritalStatus,
                DateOfBirth = Convert.ToDateTime(context.DateOfBirth),
                Gender = context.Gender,
                Email = context.Email,
                Phone = context.Phone,
                Password = context.Password,

                BranchName = context.BranchName,
                StatusName = context.StatusName,
                RoleName = context.RoleName,
                EmployeeName = context.EmployeeName
            }; 
        var modalConfig = new ModalOptions
            {
                Title = "Update Member Info",
                Centered = true,
                OkText = "Update",
                Width = 500
            };

        await ModalService.CreateModalAsync<AddMemberUpdateModal, Models.InsertMember>(modalConfig, member);
    }

    // Open Add Modal (Empty)
    private async Task OnAddMember()
    {
        var modalConfig = new ModalOptions
            {
                Title = "Add Member Info",
                Centered = true,
                OkText = "Submit",
                Width = 500
            };

        await ModalService.CreateModalAsync<AddMemberModal, Models.InsertMember>(modalConfig, new Models.InsertMember());

    }

    void deleteRow(int id)
    {
        //add api to remove from db
        MemberList = MemberList.Where(d => d.ID != id).ToList();
    }

    
}
