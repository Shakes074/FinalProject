@page "/member"

<h3>Member</h3>


<Button Type="primary" OnClick="@OnAddMember">
    Add Member
</Button>

<br />

<Table @ref="table"
       TItem="Models.ViewMember"
       DataSource="@MemberList"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       @bind-SelectedRows="selectedRows"
       OnChange="OnChange"
       Size="TableSize.Small"
       RowKey="x=>x.Id">

    <PropertyColumn Title="Id" Property="c=>c.Id" Sortable />
    <PropertyColumn Title="First Name" Property="c=>c.FirstName" />
    <PropertyColumn Title="Last Name" Property="c=>c.LastName" Sortable />
    <PropertyColumn Title="Marital Status" Property="c=>c.MaritalStatus" Sortable />
    <PropertyColumn Title="Date of Birth" Property="c=>c.DateOfBirth" Sortable />
</Table>

<br />

@using AntDesign;
@using AntDesign.TableModels;
@using System.Text.Json;
@using System.ComponentModel;
@using UI.Components.Pages.Modals
@using Models;
@using UI.Service

@inject ModalService ModalService;

@code {

    List<Models.ViewMember> MemberList;

    IEnumerable<Models.ViewMember> selectedRows;
    ITable table;

    int _pageIndex = 1;
    int _pageSize = 10;
    int _total = 0;

    protected override async Task OnInitializedAsync()
    {
        MemberList = await MemberService.ViewMembers();
        //_total = MemberList.Count;
    }


    public async Task OnChange(QueryModel<Models.ViewMember> queryModel)
    {
        Console.WriteLine(JsonSerializer.Serialize(queryModel));
    }

    // Open Update Modal and Populate with with Data
    private async Task OnUpdate(Models.InsertMember member)
    {
        var modalConfig = new ModalOptions
            {
                Title = "Update Member Info",
                Centered = true,
                OkText = "Update",
                Width = 500
            };

        await ModalService.CreateModalAsync<AddMemberModal, Models.InsertMember>(modalConfig, member);
    }

    // Open Add Modal (Empty)
    private async Task OnAddMember()
    {
        var modalConfig = new ModalOptions
            {
                Title = "Add Member Info",
                Centered = true,
                OkText = "Submit",
                Width = 500
            };

        await ModalService.CreateModalAsync<AddMemberModal, Models.InsertMember>(modalConfig, new Models.InsertMember());

    }
}
