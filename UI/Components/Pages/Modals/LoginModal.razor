@using AntDesign
@using Models
@using System.Text.Json
@using Service;

@inherits FeedbackComponent<ViewMember>

<Form Model="@_model" Layout="vertical" ValidateMode=@FormValidateMode.Complex>




    <GridRow Gutter="(16, 16)">
        <GridCol Span="12">
            <FormItem Label="Email" Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true } })>
                <Input @bind-Value="@context.Email"
                       OnBlur="OnBlur"
                       OnFocus="OnFocus" />
            </FormItem>
        </GridCol>

        <GridCol Span="12">
            <FormItem Label="Password" Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true } })>
                <InputPassword @bind-Value="@context.Password"
                               OnBlur="OnBlur"
                               OnFocus="OnFocus" />
            </FormItem>
        </GridCol>
    </GridRow>
</Form>


@code {
    @using API.httpClient;

    ViewMember _model;
    private bool isUpdate = false;

    protected override async void OnInitialized()
    {
        isUpdate = base.Options.ID <= 0;
        _model = base.Options ?? new ViewMember();

       
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(_model)}");
        _ = base.FeedbackRef.CloseAsync();
    }
    public override async Task OnFeedbackOkAsync(ModalClosingEventArgs args)
    {

        Console.WriteLine("ADD API", _model); // CALL API to ADD

        // var response = await MemberService.LoginMember(_model);

        // if (response)
        // {

        // }
        // else
        // {
        //     Console.WriteLine("Add Failed");
        // }
    }

    private void OnBlur()
    {
        Console.WriteLine("blur");
    }
    private void OnFocus()
    {
        Console.WriteLine("focus");
    }
   
} 