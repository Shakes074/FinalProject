@using AntDesign
@using Models
@using System.Text.Json
@using Service;

@inherits FeedbackComponent<InsertBranch>

<Form Model="@_model" Layout="vertical" ValidateMode=@FormValidateMode.Complex>
    <FormItem Label="Branch Name" Required>
        <Input @bind-Value="@context.Name" />
    </FormItem>

    <Select TItem="Country"
            TItemValue="string"
            DataSource="@"
            @bind-Value="@_selectedValue"
            LabelName="Country"
            ValueName="@nameof(Person.Value)"
            Placeholder="Select a person"
            DefaultActiveFirstOption="false"
            EnableSearch
            OnBlur="OnBlur"
            OnFocus="OnFocus"
            OnSelectedItemChanged="OnSelectedItemChangedHandler"
            OnSearch="OnSearch">
    </Select>

    <FormItem Label="Provice" Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true } })>
        <Input @bind-Value="@context.Province" />
    </FormItem>

    <FormItem Label="Country" Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true } })>
        <Input @bind-Value="@context.Country" />
    </FormItem>
</Form>

@code {
    private InsertBranch _model;
    private bool isUpdate = false;

    protected override void OnInitialized()
    {
        isUpdate = base.Options.ID <= 0;
        _model = base.Options ?? new InsertBranch();
        base.OnInitialized();
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(_model)}");
        _ = base.FeedbackRef.CloseAsync();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(_model)}");
    }

    public override async Task OnFeedbackOkAsync(ModalClosingEventArgs args)
    {
        Console.WriteLine("ADD API", _model); // CALL API to ADD

        var response = await BranchService.RegisterBranch(_model);

        if (response)
        {

        }
        else
        {
            Console.WriteLine("Add Failed");
        }
    }

    public override async Task OnFeedbackCancelAsync(ModalClosingEventArgs args)
    {
        Console.WriteLine("You clicked Cancel button");
    }
}