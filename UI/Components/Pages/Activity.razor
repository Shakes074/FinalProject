@page "/activity"

<h3>Activity</h3>


<Button Type="primary" OnClick="@OnAddActivity">
    Add Activity
</Button>

<br />

<Table @ref="table"
       TItem="Models.Activity"
       DataSource="@ActivitysList"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       @bind-SelectedRows="selectedRows"
       OnChange="OnChange"
       Size="TableSize.Small"
       RowKey="x=>x.ID">

    <PropertyColumn Title="Id" Property="c=>c.ID" Sortable />
    <PropertyColumn Title="Type of Activity" Property="c=>c.Name" />
    <PropertyColumn Title="Discription" Property="c=>c.Description" Sortable />

</Table>

<br />

@using AntDesign;
@using AntDesign.TableModels;
@using System.Text.Json;
@using System.ComponentModel;
@using UI.Components.Pages.Modals
@using Models;
@using UI.Service

@inject ModalService ModalService;

@code {
    List<Models.Activity> ActivitysList;

    IEnumerable<Models.Activity> selectedRows;
    ITable table;

    int _pageIndex = 1;
    int _pageSize = 10;
    int _total = 0;

    protected override async Task OnInitializedAsync()
    {
        ActivitysList = await ActivityService.ViewActivity();
        _total = ActivitysList.Count;
    }


    public async Task OnChange(QueryModel<Models.Activity> queryModel)
    {
        Console.WriteLine(JsonSerializer.Serialize(queryModel));
    }

    // Open Update Modal and Populate with with Data
    private async Task OnUpdate(Models.Activity activity)
    {
        var modalConfig = new ModalOptions
            {
                Title = "Update Role Info",
                Centered = true,
                OkText = "Update",
                Width = 500
            };

        await ModalService.CreateModalAsync<AddActivityModal, Models.Activity>(modalConfig, activity);
    }

    // Open Add Modal (Empty)
    private async Task OnAddActivity()
    {
        var modalConfig = new ModalOptions
            {
                Title = "Add Role Info",
                Centered = true,
                OkText = "Submit",
                Width = 500
            };

        await ModalService.CreateModalAsync<AddActivityModal, Models.Activity>(modalConfig, new Models.Activity());

    }
}
